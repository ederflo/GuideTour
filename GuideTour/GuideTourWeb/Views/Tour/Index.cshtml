@model GuideTourWeb.Models.TourViewModels.IndexTourViewModel
@{
    ViewData["Title"] = "Übersicht";
}
    <div class="row">
        <div class="col-12 col-md-6 border-right">
            <div id="notStartedTours" class="row">
                <div class="col-12 text-center text-white mb-4">
                    <a href="#" data-toggle="modal" data-target="#createTourModal">
                        <i class="fa fa-3x fa-plus-circle fa-pull-left text-white"></i>
                    </a>
                    <h3>Startende Führungen</h3>
                    <h6>Hier finden Sie zu startende Führungen, welche bestätigt werden müssen.</h6>
                </div>
                @foreach (TourViewModel item in Model.NotStarted)
                {
                <div id="@("tourNotStarted_" + item.Id)" class="col-12 col-lg-6 mt-3">
                    <div class="card">
                        <div class="card-header bg-secondary-color h4">@item.GuideName</div>
                        <div class="card-body bg-ternary-color text-white">
                            <p>
                                <strong>Team:</strong> @item.Team<br />
                                <strong>Gast:</strong> @(string.IsNullOrWhiteSpace(item.VisitorName) ? "--" : item.VisitorName)
                            </p>
                            <button id="@("btnStart_" + item.Id)" type="button" class="btn bg-primary-color text-white w-100 font-weight-bold" 
                                    onclick="startTourAjax('@item.Id');">Bestätigen</button>
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
        <div class="col-12 col-md-6 mt-5 mt-md-0 border-left">
            <div id="startedTours" class="row">
                <div class="col-12 text-center text-white mb-4">
                    <a asp-controller="Dashboard" asp-action="Index">
                        <i class="fa fa-3x fa-chart-bar fa-pull-right text-white"></i>
                    </a>
                    <h3>Laufende Führungen</h3>
                    <h6>Hier finden Sie laufende Führungen, welche beendet werden können.</h6>
                </div>
                @foreach (TourViewModel item in Model.Started)
                {
                <div id="@("tourStarted_" + item.Id)" class="col-12 col-lg-6 mt-3">
                    <div class="card">
                        <div class="card-header bg-secondary-color h4">@item.GuideName
                            <a onclick="cancelTourAjax('@item.Id')">
                                <i class="fa fa-1x fa-times fa-pull-right text-dark"></i>
                            </a>
                        </div>
                        <div class="card-body bg-ternary-color text-white">
                            <p>
                                <strong>Team:</strong> @item.Team<br />
                                <strong>Führungsstart:</strong> @item.StartedTour.Value.ToString("HH:mm")<br />
                                <strong>Gast:</strong> @(string.IsNullOrWhiteSpace(item.VisitorName) ? "--" : item.VisitorName)
                            </p>
                            <button id="@("btnEnd_" + item.Id)" type="button" class="btn bg-primary-color text-white w-100 font-weight-bold"
                                    onclick="completeTourAjax('@item.Id');">Beenden</button>
                        </div>
                    </div>
                </div>
                }
            </div>
        </div>
    </div>


    <div id="createTourModal" class="modal fade" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-secondary-color text-dark">
                    <h5 class="modal-title">Neue Führung erfassen</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body bg-primary-color text-white">
                    <form id="newTourForm" method="post">
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label>Team</label>
                                    @{
                                        int numberOfCols = 3;
                                        int numberOfRows = 0;
                                        int cntTeams = Model.Teams.Count;
                                        int currentTeam = 0;
                                        int counter = 0;

                                        numberOfRows = cntTeams / numberOfCols;

                                        if (cntTeams % numberOfCols != 0)
                                            numberOfRows++;

                                        <div class="row btn-group btn-group-toggle ml-1 mr-1" data-toggle="buttons">
                                            @for (int i = 0; i < numberOfRows; i++)
                                            {
                                                @while (counter < 3 && currentTeam < cntTeams)
                                                {
                                                    <div class="col-4 p-0 text-center">
                                                        <label class="btn btn-secondary active w-100">
                                                            <input type="radio" name="guideTeamId" value="@Model.Teams[currentTeam].TeamId" id="@("radio_" + Model.Teams[currentTeam].TeamId)" @(currentTeam == 0 ? "checked" : "")> @Model.Teams[currentTeam].TeamName
                                                        </label>
                                                    </div>
                                                    counter++;
                                                    currentTeam++;
                                                }
                                                counter = 0;
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group">
                                    <label for="guideName">Name</label>
                                    <div id="guidesButtonGroups">
                                        @{
                                            foreach (TeamViewModel t in Model.Teams)
                                            {
                                                bool firstTeam = Model.Teams.First().Equals(t);
                                                numberOfCols = 3;
                                                numberOfRows = 0;
                                                int cntGuides = t.Guides.Count;
                                                int currentGuide = 0;
                                                counter = 0;

                                                numberOfRows = cntGuides / numberOfCols;

                                                if (cntGuides % numberOfCols != 0)
                                                    numberOfRows++;

                                                <div class="row btn-group btn-group-toggle ml-1 mr-1" name="@t.TeamId" data-toggle="buttons">
                                                    @for (int i = 0; i < numberOfRows; i++)
                                                    {
                                                        @while (counter < 3 && currentGuide < cntGuides)
                                                        {
                                                            <div class="col-4 p-0">
                                                                <label class="btn btn-secondary active w-100">
                                                                    <input type="radio" name="guideId" value="@t.Guides[currentGuide].Id" id="@("radio_" + t.Guides[currentGuide].Id)" @(currentGuide == 0 && firstTeam ? "checked" : "")> @t.Guides[currentGuide].Name
                                                                </label>
                                                            </div>
                                                            counter++;
                                                            currentGuide++;
                                                        }
                                                        counter = 0;
                                                    }
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group text-white">
                                    <label for="visitorName">Gast (optional)</label>
                                    <input type="text" class="form-control bg-primary-color text-white" asp-for="VisitorName" id="visitorName" placeholder="Name des Gastes...">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <button id="btnSubmitForm" type="submit" class="btn bg-ternary-color text-white w-100 font-weight-bold">Erstellen</button>
                            </div>
                        </div>
                        <input id="teacherId" name="teacherId" asp-for="TeacherId" type="hidden" value="@Model.TeacherId">
                    </form>
                </div>
            </div>
        </div>
    </div>

@section Scripts {
    <script src="~/js/Touren.js" asp-append-version="true"></script>

    <script>
        $(document).ready(function () {
            $('#guidesButtonGroups').children().hide();

            fillOptionsOfSelect('@Model.Teams.First().TeamId');
        });

        $('input[type=radio][name=guideTeamId]').change(function() {
            fillOptionsOfSelect(this.value);
        });

        function fillOptionsOfSelect(teamId) {
            $('#guidesButtonGroups').children().hide();
            $('#guidesButtonGroups').children('div[name="' + teamId + '"]').show();
            var cols = $('div[name="' + teamId + '"]').children().first().children().first().children().first().trigger('click');
        }

        $("#newTourForm").submit(function(e) {
            e.preventDefault(); // avoid to execute the actual submit of the form.
            $('#btnSubmitForm').attr('disabled', true);

            var form = $(this);
            var url = '/Tour/NewTour';

            checkPermissions(function () {
                $.ajax({
                   type: "POST",
                   url: url,
                   data: form.serialize(), // serializes the form's elements.
                    success: function (data) {
                        $('#createTourModal').modal('hide');
                        $('#btnSubmitForm').attr('disabled', false);
                    },
                    error: function () {
                        $('#btnSubmitForm').attr('disabled', false);
                    }
                });
            });
        });

        $('#createTourModal').on('hidden.bs.modal', function () {
            $('#btnSubmitForm').attr('disabled', false);
            $("#newTourForm")[0].reset();
            $("input:radio[name=guideTeamId][disabled=false]:first").attr('checked', true);
            var id = $('input:radio[name=guideTeamId]:checked').val();
            $('#radio_' + id).trigger('click');
            fillOptionsOfSelect(id);
        });


        function getTeacherId() {
            return $('#teacherId').val();
        }

        function setTeacherId(id) {
            $('#teacherId').val(id);
        }
    </script>
}